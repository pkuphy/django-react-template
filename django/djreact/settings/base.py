"""
Django settings for djreact project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
REACT_DIR = os.path.join(os.path.join(BASE_DIR, os.pardir), 'reactjs')

CONF_FILE = '/etc/djreact/djreact.json'
if not os.path.exists(CONF_FILE):
    CONF_FILE = os.path.join(os.path.join(os.path.join(BASE_DIR, os.pardir), 'conf'), 'djreact.json')

try:
    with open(CONF_FILE, 'r') as f:
        GLOBAL_CONFIG = json.load(f)
except:
    GLOBAL_CONFIG = {}

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = GLOBAL_CONFIG.get('secret_key', '')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = GLOBAL_CONFIG.get('debug', True)
DEV_MODE = GLOBAL_CONFIG.get('dev_mode', True)

ALLOWED_HOSTS = GLOBAL_CONFIG.get('allowed_hosts', [])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'webpack_loader',
]
INSTALLED_APPS += [
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djreact.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djreact.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DB_CONFIG = GLOBAL_CONFIG.get('database', {})
DB_TEST = DB_CONFIG.get('test', {})
DATABASES = {
    'default': {
        'ENGINE': DB_CONFIG.get('engine', 'django.db.backends.mysql'),
        'HOST': DB_CONFIG.get('host', 'localhost'),
        'PORT': DB_CONFIG.get('port', 3306),
        'USER': DB_CONFIG.get('user', 'root'),
        'PASSWORD': DB_CONFIG.get('password', 'test'),
        'NAME': DB_CONFIG.get('name', 'djreact'),
        'TEST': {
            'name': DB_TEST.get('name', 'djreacttest'),
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/local/',  # end with slash
        'STATS_FILE': os.path.join(REACT_DIR, 'webpack-stats-local.json'),
    }
}
